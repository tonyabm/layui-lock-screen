layui.use(["jquery", "layer"], function() {
    var $ = layui.$,
        layer = layui.layer,
        lockTony = {
        // 自定义设置   开始
        bgImg: '', //你的锁屏壁纸
        timeOut: 1000 * 60 * 30,
        // 自定义设置   结束
        monitorTimer: false,
        lockIndex: false,
        tonyMoveTime: 'tonyMoveTime',
        tonyIsLock: 'tonyIsLock',
        tonyIsUnLock: true,

        init() {
            if(this.isMobile()) return;
            localStorage.getItem(this.tonyMoveTime) && localStorage.setItem(this.tonyMoveTime, Date.now()) //清空本地数据1
            localStorage.getItem(this.tonyIsLock) && localStorage.removeItem(this.tonyIsLock) //清空本地数据2

            $('head').append('<style>.tony-lock-box{background:url(' + this.bgImg + ') no-repeat center center;background-size:100% 100%;cursor:pointer;text-align:center;display:none}.tony-lock-box i.layui-icon-password{position:fixed;bottom:20%;width:100%;display:block;color:#fff;font-size:100px}.tony-lock-box i.layui-icon-password:focus,.tony-lock-box i.layui-icon-password:hover{color:#FF5722}</style>');

            $('body').append('<div id="tony-lock-box"class="tony-lock-box"><i id="tony-unlock-box" class="layui-icon layui-icon-password tony-unlock-box"></i></div>');


            this.resizeLockPage()
            window.onmousemove = () => { //鼠标移动事件，更新最新的移动时间
                if (!parseInt(localStorage.getItem(this.tonyIsLock))) {
                    localStorage.setItem(this.tonyMoveTime, Date.now())
                }
            }

            $('#tony-unlock-box').bind('click', () => {
                localStorage.getItem(this.tonyMoveTime) && localStorage.removeItem(this.tonyMoveTime) //清空本地数据1
                localStorage.getItem(this.tonyIsLock) && localStorage.removeItem(this.tonyIsLock) //清空本地数据2
                localStorage.setItem(this.tonyMoveTime, Date.now())
                layer.close(this.lockIndex)
                console.log(this.tonyIsUnLock)
                if (this.tonyIsUnLock) {
                    this.tonyIsUnLock = false
                    this.monitorTimer = setInterval(this.lockPro.bind(this), 1000)
                    setTimeout(this.unlock.bind(this), 1000 * 3)
                }
            }) //绑定解锁事件

            this.monitorTimer = setInterval(this.lockPro.bind(this), 1000) //开启时钟监控是否要锁屏
        },

        lockPro() {
            console.log('停止移动时长', (Date.now() - localStorage.getItem(this.tonyMoveTime)) / 1000, 's', '锁屏时间', this.timeOut / 1000, 's')
            if (Date.now() - parseInt(localStorage.getItem(this.tonyMoveTime)) < this.timeOut) {
                localStorage.setItem(this.tonyIsLock, 0)
            } else {
                this.lockPage()
                console.log('锁屏了')
            }
        },
        // 手动锁定
        handleLock() {
            this.lockPage()
            console.log('锁屏了')
        },
        // 密码解锁
        resizeLockPage() {
            $(".tony-lock-box").css({
                width: $(window).width() + "px",
                height: $(window).height() + "px",
            })
        },
        isMobile() {
            return navigator.userAgent.match(
                /(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i
            )
        },
        lockPage() {
            this.monitorTimer & clearInterval(this.monitorTimer)
            localStorage.setItem(this.tonyIsLock, 1)
            obj = this
            this.lockIndex = layer.open({
                id: 1,
                title: false,
                type: 1,
                anim: 2,
                content: $("#tony-lock-box"),
                area: [$(window).width() + "px", $(window).height() + "px"],
                closeBtn: 0,
                shade: 0.9,
                success: function () {

                }
            });
        },
        unlock() {
            this.tonyIsUnLock = true
        }

    };

    lockTony.init();

});
